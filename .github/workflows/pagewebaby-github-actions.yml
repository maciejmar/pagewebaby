name: pagewebaby runner

on:
  schedule:
    - cron: '0 8,20 * * *'
  push:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: self-hosted
    timeout-minutes: 602
    strategy:
      fail-fast: false
      matrix:
        node-version: [20.x]   # Angular CLI wymaga >= 18.13 – dajemy 20.x

    env:
      DOCROOT_PARENT: /home/ubuntu/pagewebaby/actions-runner/_work/pagewebaby/pagewebaby
      PWA_EXTERNAL_REPO: maciejmar/basketball-game

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - run: node -v && npm -v

      # ───── Strona (root) ─────
      - name: Install deps (site)
        run: npm ci

      - name: Build site (production)
        run: npx ng build --configuration production --base-href / --deploy-url /

      # ───── Detekcja: czy PWA jest sub-projektem w tym repo? ─────
      - name: Detect PWA mode
        id: detect
        shell: bash
        run: |
          if grep -q '"basketball-pwa"' angular.json 2>/dev/null; then
            echo "mode=subproject" >> "$GITHUB_OUTPUT"
          else
            echo "mode=external" >> "$GITHUB_OUTPUT"
          fi
          echo "Detected PWA mode: $(cat $GITHUB_OUTPUT || echo ${{ steps.detect.outputs.mode }})"

      # ───── PWA: wariant SUB-PROJECT (w tym samym repo) ─────
      - name: Build PWA (subproject)
        if: ${{ steps.detect.outputs.mode == 'subproject' }}
        run: npx ng build basketball-pwa --configuration production --base-href /basketball-pwa/ --deploy-url /basketball-pwa/

      - name: Find PWA build dir (subproject)
        if: ${{ steps.detect.outputs.mode == 'subproject' }}
        id: pwadir_sub
        shell: bash
        run: |
          if compgen -G "dist/*/browser/basketball-pwa" > /dev/null; then
            echo "dir=$(ls -d dist/*/browser/basketball-pwa)" >> $GITHUB_OUTPUT
          elif compgen -G "dist/*/basketball-pwa" > /dev/null; then
            echo "dir=$(ls -d dist/*/basketball-pwa)" >> $GITHUB_OUTPUT
          else
            echo "No PWA build found for subproject"; exit 1
          fi

      - name: Put PWA into site's dist (subproject)
        if: ${{ steps.detect.outputs.mode == 'subproject' }}
        run: |
          mkdir -p dist/pagewebaby/basketball-pwa
          rsync -a --delete "${{ steps.pwadir_sub.outputs.dir }}/" dist/pagewebaby/basketball-pwa/

      # ───── PWA: wariant EXTERNAL (osobne repo) ─────
      - name: Checkout PWA external repo
        if: ${{ steps.detect.outputs.mode == 'external' }}
        uses: actions/checkout@v4
        with:
          repository: ${{ env.PWA_EXTERNAL_REPO }}
          path: pwa

      - name: Use Node.js ${{ matrix.node-version }} (for PWA too)
        if: ${{ steps.detect.outputs.mode == 'external' }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: pwa/package-lock.json

      - name: Install deps (PWA external)
        if: ${{ steps.detect.outputs.mode == 'external' }}
        working-directory: pwa
        run: npm ci

      - name: Build PWA (external)
        if: ${{ steps.detect.outputs.mode == 'external' }}
        working-directory: pwa
        run: npx ng build --configuration production --base-href /basketball-pwa/ --deploy-url /basketball-pwa/

      - name: Find PWA build dir (external)
        if: ${{ steps.detect.outputs.mode == 'external' }}
        id: pwadir_ext
        shell: bash
        run: |
          if compgen -G "pwa/dist/*/browser" > /dev/null; then
            echo "dir=$(ls -d pwa/dist/*/browser)" >> $GITHUB_OUTPUT
          elif compgen -G "pwa/dist/*" > /dev/null; then
            echo "dir=$(ls -d pwa/dist/*)" >> $GITHUB_OUTPUT
          else
            echo "No PWA build found in external repo"; exit 1
          fi

      - name: Put PWA into site's dist (external)
        if: ${{ steps.detect.outputs.mode == 'external' }}
        run: |
          mkdir -p dist/pagewebaby/basketball-pwa
          rsync -a --delete "${{ steps.pwadir_ext.outputs.dir }}/" dist/pagewebaby/basketball-pwa/

      # ───── Podgląd lokalny (opcjonalnie) ─────
      - name: Show PWA build (local)
        run: |
          ls -lah dist/pagewebaby/basketball-pwa || true

      # ───── Deploy (self-hosted → lokalny rsync) ─────
      - name: Deploy dist/ to server docroot parent
        shell: bash
        run: |
          rsync -az --delete ./dist/ "$DOCROOT_PARENT"/ || EXIT=$?
          # rsync czasem zwraca 24 („vanished”) – nie traktuj tego jako fail joba
          if [ "${EXIT:-0}" != "0" ] && [ "$EXIT" != "24" ]; then exit "$EXIT"; fi

      - name: Reload Nginx
        run: sudo nginx -t && sudo systemctl reload nginx

      - name: Verify deployed files on server
        run: |
          ls -lah "$DOCROOT_PARENT"/pagewebaby | head -n 80
          echo "---- /basketball-pwa ----"
          ls -lah "$DOCROOT_PARENT"/pagewebaby/basketball-pwa | head -n 80
