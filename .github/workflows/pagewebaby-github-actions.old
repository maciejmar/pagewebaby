name: pagewebaby runner
on:
  schedule:
    - cron: '0 8,20 * * *'
  push:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: self-hosted
    timeout-minutes: 602

    strategy:
      fail-fast: false
      matrix:
        node-version: [16.x]   # ← jak w Twoim pliku (dla strony)

    steps:
      # ───────── Strona (jak u Ciebie) ─────────
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - run: npm ci

      - name: Build Angular App for Production
        run: npm run build -- --prod   # zostawiamy jak było

      - name: Print Current Directory
        run: pwd

      # ───────── PWA z zewnętrznego repo (Node 20 tylko dla tych kroków) ─────────
      - name: Checkout PWA repo
        uses: actions/checkout@v4
        with:
          repository: maciejmar/basketball-game
          path: basketball-pwa

      - name: Use Node.js 20 for PWA
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
          cache-dependency-path: basketball-pwa/package-lock.json

      - name: Install deps (PWA)
        working-directory: basketball-pwa
        run: npm ci

      - name: Build PWA (production)
        working-directory: basketball-pwa
        run: npx ng build --configuration production --base-href /basketball-pwa/ --deploy-url /basketball-pwa/

      - name: Copy PWA build into site's dist
        shell: bash
        run: |
          # znajdź katalog wyjściowy (w zależności od wersji Angulara)
          if compgen -G "basketball-pwa/dist/*/browser" > /dev/null; then
            PWA_DIR=$(ls -d basketball-pwa/dist/*/browser)
          else
            PWA_DIR=$(ls -d basketball-pwa/dist/*)
          fi
          mkdir -p dist/pagewebaby/basketball-pwa
          rsync -a --delete "$PWA_DIR/" dist/pagewebaby/basketball-pwa/
          ls -lah dist/pagewebaby/basketball-pwa | head -n 50

      # ───────── SSH jak u Ciebie + deploy scp ─────────
      - name: Setup SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.NEW_PUB_KEY }}" > ~/.ssh/id_rsa.pub
          chmod 600 ~/.ssh/id_rsa.pub
          ssh-keyscan -Hv ${{ secrets.OVH_VPS_IP }} >> ~/.ssh/known_hosts

      - name: Deploy to Server (scp dist/* → serwer)
        run: |
          scp -r ./dist/* ubuntu@${{ secrets.OVH_VPS_IP }}:/home/ubuntu/pagewebaby/actions-runner/_work/pagewebaby/pagewebaby/

      # ───────── Poprawny reload Nginx na serwerze ─────────
      - name: Reload Nginx
        run: ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.OVH_VPS_IP }} 'sudo nginx -t && sudo systemctl reload nginx'

      # (opcjonalnie) Twoje PM2
      - run: npm run pm2-check
      - run: npm run pm2-restart
