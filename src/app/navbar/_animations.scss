@use 'sass:math';
@import './../../styles.scss';



body{
  background-color: $base-black;
}
// Colors for the animation
$color-list: rgb(10, 10, 10), rgb(47, 47, 65),rgb(121, 121, 211),rgb(207, 207, 250), white;

@keyframes colorwave {
  @for $i from 1 through length($color-list) {
    #{percentage($i* math.div(1, length($color-list))  )} {
      color: nth($color-list, $i);
    }
  }
}

.colorwave {
  animation: colorwave 5s infinite linear;
  animation-direction: reverse; // for right to left direction
}

// Change the colors
$color1: blue;
$color2: orange;

.text-effect {
  overflow: hidden;
  position: relative;
  
  // The blend modes mute the colors, so let's bump them up
  filter: contrast(110%) brightness(190%);
}

.neon {
  position: relative;
  
  // Only works on a black background, sorry
  background: black;
  
  // The actual text inside the div is superfluous, only data-text matters. The text is added so you can easily edit the preview
  color: transparent;
  
  &::before,
  &::after {
    // Add two copies of the text on their own layer
    content: attr(data-text);
    
    // White, so we can paint them later
    color: white;
    
    // And blur them to create the neon effect with the blend-mode below
    filter: blur(0.01em);
    
    position: absolute;
    top: 0; left: 0;
    pointer-events: none;
  }
  
  // Set the top copy to difference. This creates the knock-out effect with a bit of glow
  &::after {
    mix-blend-mode: difference;
  }
}

// Position our two effect layers
.gradient,
.spotlight {
  position: absolute;
  top: 0; left: 0; bottom: 0; right: 0;
  pointer-events: none;
  z-index: 10;  
}

// Add the colors
.gradient {
  background: linear-gradient(45deg, $color1, $color2);
  
  // Multiply mode will paint only the white text
  mix-blend-mode: multiply;
}

.spotlight {
  animation: light 5s infinite linear;
  
  // These are the lights, color-dodge needs a black bg for optimum effect
  background: 
    radial-gradient(circle, white, transparent 25%) 0 0 / 25% 25%, 
    radial-gradient(circle, white, black 25%) 50% 50% / 12.5% 12.5%;
  top: -100%; left: -100%;
  
  // Color dodge gives the lights that shimmer effect
  mix-blend-mode: color-dodge;
}

@keyframes light {
  100% {
    transform: translate3d(50%, 50%, 0);
  }
}





